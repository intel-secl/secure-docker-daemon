package main

import (
	"fmt"
	"path"
	"io/ioutil"
)

const (
	ConstBlockDevBasePath		=	"/sys/dev/block"
	ConstLoopMajorNum		=	7
	ConstBackingFilePath		=	"loop/backing_file"
)

func getLoopDeviceInfo(devNum int64) map[string]string {
	m := make(map[string]string)

        devBackingFileInfo := path.Join(ConstBlockDevBasePath,
                        fmt.Sprintf("%d:%d", ConstLoopMajorNum, devNum),
                        "loop/backing_file")

        data, _ := ioutil.ReadFile(devBackingFileInfo)
	m["backing_file"] = string(data)

	flags := path.Join(ConstBlockDevBasePath,
                        fmt.Sprintf("%d:%d", ConstLoopMajorNum, devNum),
                        "ro")
	data, _ = ioutil.ReadFile(flags)
	m["flags"] = string(data)

	offset := path.Join(ConstBlockDevBasePath,
                        fmt.Sprintf("%d:%d", ConstLoopMajorNum, devNum),
                        "loop/offset")
	data, _ = ioutil.ReadFile(offset)
	m["offset"] = string(data)

	return m
}

func getBackingFile(devNum int) (string, error) {
	devBackingFileInfo := path.Join(ConstBlockDevBasePath, 
			fmt.Sprintf("%d:%d", ConstLoopMajorNum, devNum),
			"loop/backing_file")
	
	data, err := ioutil.ReadFile(devBackingFileInfo)
	return string(data), err
}


func main() {
	i := getLoopDeviceInfo(0)
	fmt.Println(i)

	i = getLoopDeviceInfo(1)
        fmt.Println(i)

}
